# ::SwitchboardP2PTransport::constructor
::SwitchboardP2PTransport::constructor {args} {
  eval configure $args
}

# ::SwitchboardP2PTransport::destructor
::SwitchboardP2PTransport::destructor {} {
}

# ::SwitchboardP2PTransport::__init__
body ::SwitchboardP2PTransport::__init__ { client contacts transport_manager} {
  return
}

# ::SwitchboardP2PTransport::close
body ::SwitchboardP2PTransport::close {} {
  return
}

# ::SwitchboardP2PTransport::_can_handle_message
body ::SwitchboardP2PTransport::_can_handle_message { message switchboard_client} {
  return string
}

# ::SwitchboardP2PTransport::peer
body ::SwitchboardP2PTransport::peer {} {
  return string
}

# ::SwitchboardP2PTransport::rating
body ::SwitchboardP2PTransport::rating {} {
  return int
}

# ::SwitchboardP2PTransport::max_chunk_size
body ::SwitchboardP2PTransport::max_chunk_size {} {
  return int
}

# ::SwitchboardP2PTransport::_send_chunk
body ::SwitchboardP2PTransport::_send_chunk { chunk peer peer_guid} {
  return
}

# ::SwitchboardP2PTransport::_on_message_received
body ::SwitchboardP2PTransport::_on_message_received { message} {
  return
}

# ::SwitchboardP2PTransport::_on_contact_joined
body ::SwitchboardP2PTransport::_on_contact_joined { contact} {
  return
}

# ::SwitchboardP2PTransport::_on_contact_left
body ::SwitchboardP2PTransport::_on_contact_left { contact} {
  return
}

# ::SwitchboardP2PTransport::handle_peer
body ::SwitchboardP2PTransport::handle_peer { client peer peer_guid transport_manager} {
  return
}

# ::SwitchboardP2PTransport::handle_message
body ::SwitchboardP2PTransport::handle_message { client switchboard message transport_manager} {
  return
}

# ::SwitchboardP2PTransport::peer_guid
body ::SwitchboardP2PTransport::peer_guid {} {
  return string
}

# ::SwitchboardP2PTransport::can_send
body ::SwitchboardP2PTransport::can_send { peer peer_guid blob bootstrap} {
  return
}

